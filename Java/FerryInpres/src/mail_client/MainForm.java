package mail_client;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Folder;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.NoSuchProviderException;
import javax.mail.Session;
import javax.mail.Store;
import javax.swing.DefaultListModel;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

    /**
 *
 * @author rapha
 */
public class MainForm extends javax.swing.JFrame {
    private Session _session;
    private final String _email;
    private final Store _pop3Store;
    private ArrayList<Message> _msgs;
    
    /** Creates new form MainForm */
    public MainForm(String serveurPop, String serveurSMTP,
            String utilisateur, String motDePasse, String email)
            throws NoSuchProviderException, MessagingException
    {
        this._email = email;
       
        Properties property = System.getProperties();
        property.put("mail.smtp.host", serveurSMTP);
        property.put("file.encoding", "iso-8859-1");
        this._session = Session.getDefaultInstance(property, null);
        
        this._pop3Store = this._session.getStore("pop3");
        this._pop3Store.connect(serveurPop, utilisateur, motDePasse);
        
        initComponents();
        
        // Ecoute les sélections faites sur la liste des messages pour
        // ouvrir la fenêtre de lecture
        ListSelectionModel selectionModel = this.messagesList.getSelectionModel();
        selectionModel.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                messageSelected(lse);
            }
        });
        
        this.listerMessages();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        messagesList = new javax.swing.JList();
        nouveauMessageButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Messagerie");

        jLabel1.setText("Liste des messages");

        messagesList.setModel(new DefaultListModel());
        messagesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(messagesList);

        nouveauMessageButton.setText("Nouveau message");
        nouveauMessageButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nouveauMessageButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addComponent(nouveauMessageButton))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(nouveauMessageButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void nouveauMessageButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nouveauMessageButtonActionPerformed
    (new NouveauMessage(this, true, this._session, this._email))
            .setVisible(true);
}//GEN-LAST:event_nouveauMessageButtonActionPerformed

private void messageSelected(ListSelectionEvent lse)
{
    try {
        new LireMessage(
            this, true, this._session, this._email,
            this._msgs.get(lse.getFirstIndex())
        ).setVisible(true);
    } catch (MessagingException ex) {
        Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
        Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
    }
}

private void listerMessages() throws MessagingException
{
    Folder folder = this._pop3Store.getFolder("INBOX");
    folder.open(Folder.READ_ONLY);

    Message[] msgs = folder.getMessages();
    
    if (folder.getNewMessageCount() > 0) {
       this.setTitle(
           "Messagerie ("+ folder.getNewMessageCount() +" nouveau(x) messages)"
       );
    } else {
       this.setTitle("Messagerie (Pas de nouveau message)");
    }
    
    this._msgs = new ArrayList<Message>();
    DefaultListModel model = (DefaultListModel) this.messagesList.getModel();
    model.clear();
    for (Message m : this._msgs) {
        if (m.isMimeType("text/plain")) {
            this._msgs.add(m);
            model.addElement(m.getSubject() + " de " + m.getFrom()[0]);
        }
    }
}
/**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new MainForm(
                        "pop.gmail.com", "relay.skynet.be",
                        "raphaeljavaux@gmail.com", "XXXXXXXX",
                        "raphaeljavaux@gmail.com"
                    ).setVisible(true);
                } catch (NoSuchProviderException ex) {
                    Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                } catch (MessagingException ex) {
                    Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList messagesList;
    private javax.swing.JButton nouveauMessageButton;
    // End of variables declaration//GEN-END:variables
}
