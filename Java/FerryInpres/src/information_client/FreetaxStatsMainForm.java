/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FreetaxStatsMainForm.java
 *
 * Created on 3 déc. 2011, 11:42:14
 */
package information_client;

import information_server.FreetaxStatsAck;
import information_server.FreetaxStatsDesc;
import information_server.FreetaxStatsDescReponse;
import information_server.FreetaxStatsGraph;
import information_server.FreetaxStatsTestComp;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.jfree.chart.JFreeChart;

/**
 *
 * @author rapha
 */
public class FreetaxStatsMainForm extends javax.swing.JFrame {
    ObjectOutputStream _out;
    ObjectInputStream _in;

    FreetaxStatsMainForm(ObjectOutputStream out, ObjectInputStream in) {
        initComponents();
        
        this._out = out;
        this._in = in;                
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        categorieText = new javax.swing.JTextField();
        donneesButton = new javax.swing.JButton();
        graph1DHistButton = new javax.swing.JButton();
        graph1DCompButton = new javax.swing.JButton();
        chronoCorre2DButton = new javax.swing.JButton();
        testHypotheseButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        numeroText = new javax.swing.JTextField();
        graph1DSectButton = new javax.swing.JButton();
        graph1DChronButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        nationalite1Text = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        nationalite2Text = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        categorieCompText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        marqueText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        seuilText = new javax.swing.JTextField();
        resultatLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Mois ou semaine:");

        typeComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mois", "Semaine" }));
        typeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typeComboBoxActionPerformed(evt);
            }
        });

        jLabel2.setText("Catégorie:");

        categorieText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorieTextActionPerformed(evt);
            }
        });

        donneesButton.setText("Données");
        donneesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                donneesButtonActionPerformed(evt);
            }
        });

        graph1DHistButton.setText("Graphique 1D Hist.");
        graph1DHistButton.setToolTipText("");
        graph1DHistButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graph1DHistButtonActionPerformed(evt);
            }
        });

        graph1DCompButton.setText("Graphique 1D Hist. Comp.");
        graph1DCompButton.setToolTipText("");
        graph1DCompButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graph1DCompButtonActionPerformed(evt);
            }
        });

        chronoCorre2DButton.setText("Graphique 2D corrélé");
        chronoCorre2DButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chronoCorre2DButtonActionPerformed(evt);
            }
        });

        testHypotheseButton.setText("Test d'hypothèse de comparaison des moyennes");
        testHypotheseButton.setToolTipText("");
        testHypotheseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testHypotheseButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Numero de la semaine ou du mois:");

        graph1DSectButton.setText("Graphique 1D Sect.");
        graph1DSectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graph1DSectButtonActionPerformed(evt);
            }
        });

        graph1DChronButton.setText("Graphique 1D Chronologique");
        graph1DChronButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                graph1DChronButtonActionPerformed(evt);
            }
        });

        jLabel4.setText("Nationalite 1:");

        nationalite1Text.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nationalite1TextActionPerformed(evt);
            }
        });

        jLabel5.setText("Nationalite 2:");

        jLabel6.setText("Categorie :");

        categorieCompText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categorieCompTextActionPerformed(evt);
            }
        });

        jLabel7.setText("Marque:");

        jLabel8.setText("Seuil:");

        seuilText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seuilTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resultatLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 692, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(graph1DCompButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(graph1DChronButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(typeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(categorieText, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(numeroText, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(donneesButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(graph1DSectButton)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(graph1DHistButton)))
                    .addComponent(chronoCorre2DButton)
                    .addComponent(testHypotheseButton)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(categorieCompText)
                            .addComponent(nationalite1Text, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(marqueText)
                            .addComponent(nationalite2Text, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(seuilText, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(typeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(categorieText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(numeroText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(donneesButton)
                    .addComponent(graph1DSectButton)
                    .addComponent(graph1DHistButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(graph1DCompButton)
                    .addComponent(graph1DChronButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chronoCorre2DButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(nationalite1Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(nationalite2Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(seuilText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(categorieCompText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(marqueText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultatLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(testHypotheseButton)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void afficherGraphique(int type)
{
    try {
        FreetaxStatsGraph query;
        if ("".equals(this.numeroText.getText())) {
            // Mois choisi automatiquement
            query = new FreetaxStatsGraph(
                this.categorieText.getText(), null, null, type
            );
        } else if (this.typeComboBox.getSelectedItem() == "Mois") {
            query = new FreetaxStatsGraph(
                this.categorieText.getText(),
                Integer.parseInt(this.numeroText.getText()), null, type
            );
        } else {
            query = new FreetaxStatsGraph(
                this.categorieText.getText(), null,
                Integer.parseInt(this.numeroText.getText()), type
            );
        }

        this._out.writeObject(query);
        this._out.flush();
        
        JFreeChart chart = (JFreeChart) this._in.readObject();
        
        new FreetaxStatsShowGraph(this, true, chart).setVisible(true);
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}
    
private void typeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typeComboBoxActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_typeComboBoxActionPerformed

private void categorieTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorieTextActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_categorieTextActionPerformed

private void graph1DHistButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graph1DHistButtonActionPerformed
    this.afficherGraphique(FreetaxStatsGraph.HISTOGRAMME);
}//GEN-LAST:event_graph1DHistButtonActionPerformed

private void donneesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_donneesButtonActionPerformed
    try {
        FreetaxStatsDesc desc;
        if ("".equals(this.numeroText.getText())) {
            // Mois choisi automatiquement
            desc = new FreetaxStatsDesc(
                this.categorieText.getText(), null, null
            );
        } else if (this.typeComboBox.getSelectedItem() == "Mois") {
            desc = new FreetaxStatsDesc(
                this.categorieText.getText(),
                Integer.parseInt(this.numeroText.getText()), null
            );
        } else {
            desc = new FreetaxStatsDesc(
                this.categorieText.getText(), null,
                Integer.parseInt(this.numeroText.getText())
            );
        }

        this._out.writeObject(desc);
        this._out.flush();
        
        FreetaxStatsDescReponse reponse
                = (FreetaxStatsDescReponse) this._in.readObject();
        
        new information_client.FreetaxStatsDesc(this, true, reponse).setVisible(true);
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}//GEN-LAST:event_donneesButtonActionPerformed

private void graph1DSectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graph1DSectButtonActionPerformed
    this.afficherGraphique(FreetaxStatsGraph.SECTORIEL);
}//GEN-LAST:event_graph1DSectButtonActionPerformed

private void graph1DCompButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graph1DCompButtonActionPerformed
    this.afficherGraphique(FreetaxStatsGraph.HISTOGRAMME_COMPARE);
}//GEN-LAST:event_graph1DCompButtonActionPerformed

private void chronoCorre2DButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chronoCorre2DButtonActionPerformed
    this.afficherGraphique(FreetaxStatsGraph.CHRONOLOGIE_2D);
}//GEN-LAST:event_chronoCorre2DButtonActionPerformed

private void graph1DChronButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_graph1DChronButtonActionPerformed
    this.afficherGraphique(FreetaxStatsGraph.CHRONOLOGIE);
}//GEN-LAST:event_graph1DChronButtonActionPerformed

private void nationalite1TextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nationalite1TextActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_nationalite1TextActionPerformed

private void categorieCompTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categorieCompTextActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_categorieCompTextActionPerformed

private void seuilTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seuilTextActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_seuilTextActionPerformed

private void testHypotheseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testHypotheseButtonActionPerformed
    try {
        this._out.writeObject(
            new FreetaxStatsTestComp(
                this.nationalite1Text.getText(), this.nationalite2Text.getText(),
                this.categorieCompText.getText(), this.marqueText.getText(),
                Float.parseFloat(this.seuilText.getText())
        ));
        this._out.flush();

        if (this._in.readObject() instanceof FreetaxStatsAck) {
            this.resultatLabel.setText(
                "La différence des valeurs des moyennes des ventes " +
                "hebdomadaires par nationalité ne dépasse pas le seuil."
            );
        } else {
            this.resultatLabel.setText(
                "La différence des valeurs des moyennes des ventes " +
                "hebdomadaires par nationalité DEPASSE le seuil."
            );
        }
    } catch (Exception ex) {
        Logger.getLogger(FreetaxStatsMainForm.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_testHypotheseButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField categorieCompText;
    private javax.swing.JTextField categorieText;
    private javax.swing.JButton chronoCorre2DButton;
    private javax.swing.JButton donneesButton;
    private javax.swing.JButton graph1DChronButton;
    private javax.swing.JButton graph1DCompButton;
    private javax.swing.JButton graph1DHistButton;
    private javax.swing.JButton graph1DSectButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField marqueText;
    private javax.swing.JTextField nationalite1Text;
    private javax.swing.JTextField nationalite2Text;
    private javax.swing.JTextField numeroText;
    private javax.swing.JLabel resultatLabel;
    private javax.swing.JTextField seuilText;
    private javax.swing.JButton testHypotheseButton;
    private javax.swing.JComboBox typeComboBox;
    // End of variables declaration//GEN-END:variables
}
